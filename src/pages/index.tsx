import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "../utils/api";
import { Artist } from "spotify-types/typings/artist";

const Home: NextPage = () => {

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <AuthShowcase />
        <TopArtists />
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center mt-4 gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn("spotify")}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};

const TopArtists: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: topArtists } = api.spotify.getMyTopArtists.useQuery(
    undefined, // no input
    {
      enabled: sessionData?.user !== undefined,
      initialData: [],
    },
  );

  return (
    <div className="flex flex-col items-center justify-center mt-4 gap-4">
      <h1 className="text-center text-2xl text-white">Top Artists</h1>
      <div className="flex flex-wrap items-center justify-center gap-4">
        {topArtists.map((artist) => (
          <Artist key={artist.id} artist={artist} />
        ))}
      </div>
    </div>
  );
};

const Artist = ({ artist }: { artist: Artist }) => {
  return (
    <div className="flex flex-col items-center justify-center gap-4 w-48 aspect-square">
      <img src={artist.images[0]?.url} alt={artist.name} />
      <p className="text-center text-2xl text-white">{artist.name}</p>
    </div>
  );
};